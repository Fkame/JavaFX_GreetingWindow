package nongroup.javaFXExampleTest;

import org.junit.Before;
import org.junit.Test;

import javafx.application.Application;
import javafx.stage.Stage;

/**
 * Определены методы для так называемого "класса одного теста".
 * Набор методов для структурированного запуска теста javafx с помощью JUnit.
 * Применяется для класса, унаследованного от {@link Application}, следовательно нужно также
 * переопределить {@link Application#start(Stage stage)}.
 * 
 * Скорее всего можно сделать проще и лучше, но пока так.
 */
public interface IJavaFxTest {
    /**
     * Следует пометить аннотацией {@link Before}.
     * 
     * Метод должен вызывать Application.launch() в отдельном потоке
     * и записывать ссылку созданного потока в переменную класса для дальнего доступа к потоку в {@link #enterTestPoint()}.
     */
    void launchJavaFXThread();

    /**
     * Следует пометить аннотацией {@link Test}.
     *
     * Метод, служащий точкой входа для тестового класса.
     * При его запуске сперва запустится метод, запускающий javafx поток {@link #launchJavaFXThread()}, т.к. помечен {@link Before},
     * после чего управление перейдёт к этому методу.
     * После этого метод следует увести в ожидание завершения созданного потока, например с помощью {@link Thread#join()}.
     * По желанию имеет смысл добавить таймаут, если приложение зависнет или типа того, например, {@link Thread#join(long)}.
     * 
     * Уводить поток в ожидание нужно, так как с выходом из метода завершится и тест, и как следствие, приложение.
     */
    void enterTestPoint();

    /**
     * Метод, выполняющий всю полезную нагрузку тестирования.
     * Его следует поместить в любое удобное событие javafx, или вызвать в любой момент, когда {@link Stage} уже будет готов.
     * К примеру, чтобы тестирование запускалось при показе окна нужно указать его в 
     * {@link Stage#setOnShown(javafx.event.EventHandler)} с помощью лямбда выражения или любым другим удобным способом.
     * 
     * Метод нельзя вызывать ранее вызова {@link Application#start(Stage stage)} (но внутри - без проблем), т.к. javafx не будет готов.
     * Это относится как к тестированию главного окна, так и генерируемых дополнительных.
     */
    void doMainTestStaff();
}
